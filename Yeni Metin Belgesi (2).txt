import tflite_runtime.interpreter as tflite

# Load TFLite model
interpreter = tflite.Interpreter(model_path="path/to/best_fp16.tflite")
interpreter.allocate_tensors()

# Get model input and output details
input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()

# Example input data (replace with actual camera input later)
input_data = np.random.rand(1, input_details[0]['shape'][1], input_details[0]['shape'][2], 3).astype(np.float32)  # Assuming RGB image input

# Perform inference
interpreter.set_tensor(input_details[0]['index'], input_data)
interpreter.invoke()

# Access output tensors (replace with your processing logic)
output_data = interpreter.get_tensor(output_details[0]['index'])
print(output_data)
